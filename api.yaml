openapi: 3.0.0
info:
  description: |
    This is a documentation for the code challenge backend.
  version: "1.0.0"
  title: CodeChallengeBackEnd
tags:
  - name: pdv
    description: Operations about pdv
paths:
  /pdvs:
    post:
      tags:
        - pdv
      summary: Create pdv
      description: This can be done by any user.
      operationId: createPdv
      requestBody:
        $ref: '#/components/requestBodies/Pdv'
      responses:
        '201':
          description: Successfully create a new pdv.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pdv'
        '422':
          description: Unprocessable Entity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors: 
                    type: object
                    properties:
                      field_name:
                        type: array
                        items:
                          type: string
                          example: field error
  /pdvs/{pdvId}:
    get:
      tags:
        - pdv
      summary: Find pdv by id
      description: returns a single pdv
      operationId: getPdvById
      parameters:
        - name: pdvId
          in: path
          description: ID of pdv to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pdv'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pdv'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
  /pdvs/search:
    get:
      tags:
        - pdv
      summary: Find pdv by lat lng
      description: returns a single pdv nearby the give lat lng 
      operationId: searchPdvByLatLng
      parameters:
        - name: lat
          in: path
          description: latitude
          required: true
          schema:
            type: number
            format: float
        - name: lng
          in: path
          description: longitude
          required: true
          schema:
            type: number
            format: float
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Pdv'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pdv'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors: 
                    type: object
                    properties:
                      detail:
                        type: string
                        example: Outside the coverage area
components:
  schemas:
    Point2D:
      type: array
      maxItems: 2
      minItems: 2
      items:
        type: number
        example: [-49.33425,-25.380995]
    Point:
      type: object
      description: GeoJSon geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - type: object
          properties:
            coordinates:
              $ref: '#/components/schemas/Point2D'
    Geometry:
      description: GeoJSon geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometry-objects
      type: object
      properties:
        type:
          type: string
          enum:
          - Point
          - MultiPolygon
          description: the geometry type
    MultiPolygon:
      type: object
      description: GeoJSon geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - type: object
          properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Point2D'
    Pdv:
      type: object
      properties:
        id:
          type: integer
          format: bigint
        document:
          type: string
          format: character varying(255)
          example: "69.103.604/0001-60"
        ownerName:
          type: string
          format: character varying(255)
          example: "José da Silva"
        tradingName:
          type: string
          format: character varying(255)
          example: "Adega do José"
        address:
          $ref: '#/components/schemas/Point'
        coverageArea:
          $ref: '#/components/schemas/MultiPolygon'
  responses:
    404NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              errors: 
                type: object
                properties:
                  detail:
                    type: string
                    example: Not Found    
    400BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              errors: 
                type: object
                properties:
                  detail:
                    type: string
                    example: Bad Request
  requestBodies:
    Pdv:
      content:
        application/json:
          schema:
            type: object
            properties:
              document:
                type: string
                format: character varying(255)
                example: "69.103.604/0001-60"
              ownerName:
                type: string
                format: character varying(255)
                example: "José da Silva"
              tradingName:
                type: string
                format: character varying(255)
                example: "Adega do José"
              address:
                $ref: '#/components/schemas/Point'
              coverageArea:
                $ref: '#/components/schemas/MultiPolygon'
      description: Pdv object